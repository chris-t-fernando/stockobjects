# all_sectors = SectorCollection()
# all_sectors.add_sector(Sector(sector_name='my mining company', sector_code='min'))
#               __init__(self): instantiate new QuoteCollection()
# all_sectors.get_sector(code='min').add_quote(SectorQuote(whatever))
#
# all_sectors.get_sector(code='min').get_quotes(date= , company_code=)
# all_sectors.get_quotes(date= , company_code=)

# SPEC
# SectorCollection(name Str)
# SectorCollection->sector_length()
# SectorCollection->sector_quote_length()
# SectorCollection->company_length()
# SectorCollection->company_quote_length()
# SectorCollection->add_sector(sector Sector)
# SectorCollection->get_sector(sector_code Str=None)
# SectorCollection->get_company(company_code Str=None, sector_code Str=None)
# SectorCollection->get_quote(company_code Str=None, sector_code Str=None, date datetime=None)
# Sector(sector_name Str, sector_code Str)
# Sector->add_sector_quote(all the things) -> bool
# Sector->add_sector_quote_object(quote SectorQuote) -> bool
# Sector->get_sector_quote(date datetime=None) -> QuoteCollection
# Sector->add_company(company Company) -> bool
# Sector->get_company(company_code Str) -> Company
# Sector->add_company_quote(all the things) -> bool
# Sector->add_company_quote_object(quote CompanyQuote) -> bool
# Sector->get_company_quote(company_code Str=None) -> QuoteCollection
# Sector->sector_quote_length() -> int
# Sector->company_length() -> int
# Sector->company_quote_length() -> int
# SectorQuote(all the things)
# Company(company_name Str, company_code Str)
# Company->add_quote(quote CompanyQuote)
# Company->get_quote(date datetime=None)
# Company->company_quote_length()
# CompanyQuote(all the things)
# CompanyQuote->get_quote()
